{
  "workbench.iconTheme": "vscode-icons",
  "workbench.colorTheme": "Default Dark+",
  "terminal.integrated.commandsToSkipShell": [
    "editor.action.toggleTabFocusMode",
    "workbench.action.debug.continue",
    "workbench.action.debug.pause",
    "workbench.action.debug.restart",
    "workbench.action.debug.run",
    "workbench.action.debug.start",
    "workbench.action.debug.stepInto",
    "workbench.action.debug.stepOut",
    "workbench.action.debug.stepOver",
    "workbench.action.debug.stop",
    "workbench.action.focusActiveEditorGroup",
    "workbench.action.focusFirstEditorGroup",
    "workbench.action.focusSecondEditorGroup",
    "workbench.action.focusThirdEditorGroup",
    "workbench.action.navigateDown",
    "workbench.action.navigateLeft",
    "workbench.action.navigateRight",
    "workbench.action.navigateUp",
    "workbench.action.openNextRecentlyUsedEditorInGroup",
    "workbench.action.openPreviousRecentlyUsedEditorInGroup",
    "workbench.action.quickOpenPreviousEditor",
    "workbench.action.quickOpenView",
    "-workbench.action.quickOpen",
    "workbench.action.showCommands",
    "workbench.action.tasks.build",
    "workbench.action.tasks.restartTask",
    "workbench.action.tasks.runTask",
    "workbench.action.tasks.showLog",
    "workbench.action.tasks.showTasks",
    "workbench.action.tasks.terminate",
    "workbench.action.tasks.test",
    "workbench.action.terminal.clear",
    "workbench.action.terminal.copySelection",
    "workbench.action.terminal.deleteWordLeft",
    "workbench.action.terminal.deleteWordRight",
    "workbench.action.terminal.findWidget.history.showNext",
    "workbench.action.terminal.findWidget.history.showPrevious",
    "workbench.action.terminal.focus",
    "workbench.action.terminal.focusAtIndex1",
    "workbench.action.terminal.focusAtIndex2",
    "workbench.action.terminal.focusAtIndex3",
    "workbench.action.terminal.focusAtIndex4",
    "workbench.action.terminal.focusAtIndex5",
    "workbench.action.terminal.focusAtIndex6",
    "workbench.action.terminal.focusAtIndex7",
    "workbench.action.terminal.focusAtIndex8",
    "workbench.action.terminal.focusAtIndex9",
    "workbench.action.terminal.focusFindWidget",
    "workbench.action.terminal.focusNext",
    "workbench.action.terminal.focusNextPane",
    "workbench.action.terminal.focusPrevious",
    "workbench.action.terminal.focusPreviousPane",
    "workbench.action.terminal.hideFindWidget",
    "workbench.action.terminal.kill",
    "workbench.action.terminal.moveToLineEnd",
    "workbench.action.terminal.moveToLineStart",
    "workbench.action.terminal.new",
    "workbench.action.terminal.newInActiveWorkspace",
    "workbench.action.terminal.paste",
    "workbench.action.terminal.resizePaneDown",
    "workbench.action.terminal.resizePaneLeft",
    "workbench.action.terminal.resizePaneRight",
    "workbench.action.terminal.resizePaneUp",
    "workbench.action.terminal.runActiveFile",
    "workbench.action.terminal.runSelectedText",
    "workbench.action.terminal.scrollDown",
    "workbench.action.terminal.scrollDownPage",
    "workbench.action.terminal.scrollToBottom",
    "workbench.action.terminal.scrollToNextCommand",
    "workbench.action.terminal.scrollToPreviousCommand",
    "workbench.action.terminal.scrollToTop",
    "workbench.action.terminal.scrollUp",
    "workbench.action.terminal.scrollUpPage",
    "workbench.action.terminal.selectAll",
    "workbench.action.terminal.selectToNextCommand",
    "workbench.action.terminal.selectToPreviousCommand",
    "workbench.action.terminal.split",
    "workbench.action.terminal.toggleTerminal",
    "workbench.action.togglePanel"
  ],
  "files.exclude": {
    "**/__debug_bin*": true,
    "**/.factorypath": true,
    "**/.idea": true,
    "**/.project": true,
    "**/.settings": true,
  },
  "editor.suggestSelection": "first",
  "workbench.editor.tabSizing": "fit",
  "editor.formatOnPaste": true,
  "editor.fontFamily": "'Fira Code', 'Droid Sans Mono', 'monospace', monospace, 'Droid Sans Fallback'",
  "editor.fontLigatures": true,
  "vsicons.dontShowNewVersionMessage": true,
  "editor.codeActionsOnSave": {
    "source.organizeImports": "explicit"
  },
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "xml.format.enforceQuoteStyle": "preferred",
  "[sql]": {
    "editor.defaultFormatter": "adpyke.vscode-sql-formatter"
  },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "debug.allowBreakpointsEverywhere": true,
  "debug.onTaskErrors": "showErrors",
  "search.exclude": {
    "**/vendor": true
  },
  "workbench.editorAssociations": {},
  "typescript.updateImportsOnFileMove.enabled": "always",
  "files.trimTrailingWhitespace": true,
  "explorer.compactFolders": false,
  "redhat.telemetry.enabled": false,
  "markdown.preview.breaks": true,
  "testing.automaticallyOpenPeekViewDuringAutoRun": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "typescript.disableAutomaticTypeAcquisition": true,
  // -------------------------------------------------------------//
  // BEGIN git
  "git.confirmSync": false,
  "git.autofetch": true,
  "git.ignoreRebaseWarning": true,
  "gitProjectManager.baseProjectsFolders": [
    "~/devel/projects",
    "~/devel/tools",
    "~/devel/playground",
  ],
  "gitlens.telemetry.enabled": false,
  // END git
  // -------------------------------------------------------------//
  // BEGIN golang
  "go.coverOnSave": true,
  // "gopls": {
  //   "ui.semanticTokens": true,
  //   "ui.diagnostic.staticcheck": true
  // },
  // "go.lintFlags": [
  //   // "--fast"
  // ],
  // "go.buildOnSave": "workspace",
  "go.diagnostic.vulncheck": "Imports",
  "go.toolsManagement.autoUpdate": true,
  "go.enableCodeLens": {
    "runtest": true,
  },
  // "go.lintTool": "golangci-lint",
  "go.lintOnSave": "workspace",
  "go.testOnSave": true,
  "go.testExplorer.alwaysRunBenchmarks": true,
  // END golang
  // -------------------------------------------------------------//
  "editor.inlineSuggest.enabled": true,
  "editor.bracketPairColorization.enabled": false,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.guides.indentation": false,
  "debug.console.fontSize": 16,
  "scm.inputFontSize": 14,
  "terminal.integrated.fontSize": 16,
  "terminal.integrated.lineHeight": 1.1,
  "sql-formatter.uppercase": true,
  "security.workspace.trust.untrustedFiles": "open",
  "window.customMenuBarAltFocus": false,
  "window.menuBarVisibility": "hidden",
  "window.enableMenuBarMnemonics": false,
  "[python]": {
    "editor.formatOnType": true
  },
  "terminal.integrated.fontFamily": "monospace",
  "files.insertFinalNewline": true,
  "editor.rulers": [
    120
  ],
  "[xml]": {
    "editor.tabSize": 2,
    "editor.defaultFormatter": "redhat.vscode-xml"
  },
  "xml.format.splitAttributes": "alignWithFirstAttr",
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // -------------------------------------------------------------//
  // BEGIN html
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "html.format.indentHandlebars": true,
  "html.format.wrapAttributes": "force-aligned",
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  // END html
  // -------------------------------------------------------------//
  // BEGIN dart & flutter
  "[dart]": {
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.selectionHighlight": false,
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": "off",
  },
  "dart.flutterSdkPath": "~/devel/tools/flutter",
  "dart.debugSdkLibraries": true,
  "dart.showTodos": false,
  "dart.flutterHotReloadOnSave": "all",
  "dart.hotReloadOnSave": "all",
  "dart.previewHotReloadOnSaveWatcher": true,
  "dart.debugExternalPackageLibraries": true,
  // END dart & flutter
  // -------------------------------------------------------------//
  "telemetry.telemetryLevel": "error",
  "workbench.editor.highlightModifiedTabs": true,
  // -------------------------------------------------------------//
  // BEGIN zig
  "zig.initialSetupDone": true,
  "zig.path": "",
  "zig.zls.path": "~/.config/Code/User/globalStorage/ziglang.vscode-zig/zls_install/zls",
  "zig.buildOnSave": true,
  "zig.zls.enableBuildOnSave": true,
  "zig.zls.warnStyle": true,
  // END zig
  // -------------------------------------------------------------//
}
